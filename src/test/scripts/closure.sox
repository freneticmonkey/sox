fn makeClosure(value) {
  fn closure() {
    print value;
  }
  return closure;
}

var doughnut = makeClosure("doughnut");
var bagel = makeClosure("bagel");
doughnut();
bagel();

fn outer() {
  var x = "value";
  fn middle() {
    fn inner() {
      print x;
    }

    print "create inner closure";
    return inner;
  }

  print "return from outer";
  return middle;
}

var mid = outer();
var in = mid();
in();

var globalOne;
var globalTwo;

fn main() {
  for (var a = 1; a <= 2; a = a + 1) {
    fn closure() {
      print a;
    }
    if (globalOne == nil) {
      globalOne = closure;
    } else {
      globalTwo = closure;
    }
  }
}

main();
globalOne();
globalTwo();
